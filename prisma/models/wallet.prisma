model Wallet {
  id               String             @id @default(uuid())
  identifier       String             @unique @map("identifier") // A human-readable identifier, e.g. “User123_USD_Wallet”
  name             String             @map("name") // e.g. “User 123 USD Wallet”
  ownerId          String             @map("owner_id")
  owner            User               @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  chain            WalletChain        @map("chain")
  providerWalletId String             @map("provider_wallet_id")
  address          String             @unique @map("address")
  balance          Decimal            @default(0.0) @map("balance")
  isActive         Boolean            @default(true) @map("is_active")
  createdAt        DateTime           @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime           @updatedAt @map("updated_at") @db.Timestamptz
  entries          TransactionEntry[]

  @@index([identifier])
  @@index([ownerId])
  @@index([address])
  @@index([chain])
  @@index([providerWalletId])
  @@map("wallets")
}

enum WalletChain {
  ethereum @map("ethereum")
  bnb      @map("bnb")
  polygon  @map("polygon")
  tron     @map("tron")
  base     @map("base")
  arbitrum @map("arbitrum")
  optimism @map("optimism")
  solana   @map("solana")
  celo     @map("celo")
  lisk     @map("lisk")
}
