model Transaction {
  id          String              @id @default(uuid())
  reference   String              @unique @map("reference")
  category    TransactionCategory @default(TRANSFER) @map("category")
  status      TransactionStatus   @default(PENDING) @map("status")
  description String?             @map("description")
  user        User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String              @map("user_id")
  createdAt   DateTime            @default(now()) @map("created_at") @db.Timestamptz
  completedAt DateTime?           @map("completed_at") @db.Timestamptz
  entries     TransactionEntry[]

  @@index([reference])
  @@index([status])
  @@index([userId])
  @@index([createdAt])
  @@map("transactions")
}

enum TransactionStatus {
  PENDING   @map("pending")
  COMPLETED @map("completed")
  FAILED    @map("failed")
}

enum TransactionCategory {
  DEPOSIT    @map("deposit")
  WITHDRAWAL @map("withdrawal")
  TRANSFER   @map("transfer")
  FEE        @map("fee")
  REFUND     @map("refund")
}

model TransactionEntry {
  id            String      @id @default(uuid())
  transaction   Transaction @relation(fields: [transactionId], references: [id], onDelete: Cascade)
  transactionId String      @map("transaction_id")
  wallet        Wallet      @relation(fields: [walletId], references: [id], onDelete: Cascade)
  walletId      String      @map("wallet_id")
  entryType     EntryType   @map("entry_type")
  asset         String      @map("asset")
  amount        Decimal     @map("amount")
  memo          String?     @map("memo")
  createdAt     DateTime    @default(now()) @map("created_at") @db.Timestamptz
  hash          String?     @map("hash")

  @@index([transactionId])
  @@index([walletId])
  @@map("transaction_entries")
}

enum EntryType {
  DEBIT  @map("debit")
  CREDIT @map("credit")
  SWAP   @map("swap")
}
